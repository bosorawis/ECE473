Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                              lab5.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                              lab5.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                              lab5.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                              lab5.o (__umulhisi3)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                              lab5.o (__itoa_ncheck)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

show_ampm           0x1               lab5.o
uart_tx_buf         0x28              uart_functions.o
twi_state           0x1               twi_master.o
notes               0x1               lab5.o
dec_to_7seg         0xc               lab5.o
twi_buf             0x2               twi_master.o
song                0x1               lab5.o
lm73_wr_buf         0x2               lm73_functions.o
max_beat            0x2               lab5.o
twi_bus_addr        0x1               twi_master.o
beat                0x2               lab5.o
lcd_str             0x10              lcd_functions.o
twi_msg_size        0x1               twi_master.o
brightness_level    0x1               lab5.o
lm73_rd_buf         0x2               lm73_functions.o
uart_rx_buf         0x28              uart_functions.o
ampm_time           0x2               lab5.o
str                 0x2               lab5.o
segment_data        0x5               lab5.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
LOAD lab5.o
LOAD twi_master.o
LOAD uart_functions.o
LOAD lm73_functions.o
LOAD lcd_functions.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1d28
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c      0x12c lab5.o
 .progmem.gcc_sw_table
                0x00000000000001b8       0xa2 twi_master.o
                0x000000000000025a                . = ALIGN (0x2)
                0x000000000000025a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000025a        0x0 linker stubs
 *(.trampolines*)
                0x000000000000025a                __trampolines_end = .
 *(.progmem*)
                0x000000000000025a                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000025a                __ctors_start = .
 *(.ctors)
                0x000000000000025a                __ctors_end = .
                0x000000000000025a                __dtors_start = .
 *(.dtors)
                0x000000000000025a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000025a        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x000000000000025a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000025a        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000266       0x1a /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                0x0000000000000266                __do_copy_data
 .init4         0x0000000000000280       0x10 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000280                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000290        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x0000000000000298        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000298                __vector_22
                0x0000000000000298                __vector_28
                0x0000000000000298                __vector_1
                0x0000000000000298                __vector_32
                0x0000000000000298                __vector_34
                0x0000000000000298                __vector_24
                0x0000000000000298                __bad_interrupt
                0x0000000000000298                __vector_6
                0x0000000000000298                __vector_31
                0x0000000000000298                __vector_3
                0x0000000000000298                __vector_23
                0x0000000000000298                __vector_30
                0x0000000000000298                __vector_25
                0x0000000000000298                __vector_11
                0x0000000000000298                __vector_13
                0x0000000000000298                __vector_17
                0x0000000000000298                __vector_19
                0x0000000000000298                __vector_7
                0x0000000000000298                __vector_27
                0x0000000000000298                __vector_5
                0x0000000000000298                __vector_4
                0x0000000000000298                __vector_9
                0x0000000000000298                __vector_2
                0x0000000000000298                __vector_15
                0x0000000000000298                __vector_29
                0x0000000000000298                __vector_8
                0x0000000000000298                __vector_26
                0x0000000000000298                __vector_14
                0x0000000000000298                __vector_18
                0x0000000000000298                __vector_20
 .text          0x000000000000029c     0x13e8 lab5.o
                0x000000000000029c                play_rest
                0x00000000000002b2                play_note
                0x00000000000008cc                song0
                0x0000000000000a94                play_song
                0x0000000000000a9c                music_off
                0x0000000000000aaa                music_on
                0x0000000000000ac4                music_init
                0x0000000000000b06                chk_buttons
                0x0000000000000b46                int2seg
                0x0000000000000b9a                segsum
                0x0000000000000cf0                button_routine
                0x0000000000000e42                __vector_16
                0x0000000000000f4a                __vector_12
                0x0000000000000fcc                __vector_10
                0x000000000000103c                __vector_21
                0x0000000000001078                update_time
                0x0000000000001164                SPI_init
                0x000000000000116a                SPI_Transmit
                0x0000000000001172                SPI_Receive
                0x000000000000118a                bar_graph
                0x00000000000011c4                display_update
                0x0000000000001230                right_inc
                0x000000000000127e                right_dec
                0x00000000000012b8                decode_spi_right_knob
                0x0000000000001344                left_inc
                0x00000000000013b4                left_dec
                0x0000000000001428                decode_spi_left_knob
                0x00000000000014b0                check_knobs
                0x00000000000014d4                get_remote_temp
                0x00000000000014f4                generate_temp_str
                0x0000000000001570                show_temperature
                0x00000000000015e2                LCD_Display
                0x0000000000001616                timer_init
                0x0000000000001630                ADC_init
                0x000000000000164e                volume_control_init
                0x000000000000166a                initialize_string
 .text          0x0000000000001684      0x17a twi_master.o
                0x0000000000001684                __vector_33
                0x00000000000017a0                twi_busy
                0x00000000000017a8                twi_start_wr
                0x00000000000017ca                twi_start_rd
                0x00000000000017ec                init_twi
 .text          0x00000000000017fe       0x80 uart_functions.o
                0x00000000000017fe                uart_putc
                0x000000000000180a                uart_puts
                0x0000000000001826                uart_puts_p
                0x000000000000184c                uart_init
                0x0000000000001866                uart_getc
 .text          0x000000000000187e       0x7a lm73_functions.o
                0x000000000000187e                lm73_temp_convert
                0x00000000000018b4                lm73_init
                0x00000000000018c4                get_local_temp
 .text          0x00000000000018f8      0x2b8 lcd_functions.o
                0x00000000000018f8                strobe_lcd
                0x000000000000190a                clear_display
                0x000000000000193a                cursor_home
                0x000000000000195e                home_line2
                0x0000000000001982                fill_spaces
                0x00000000000019be                char2lcd
                0x00000000000019ee                cursor_off
                0x0000000000001a1e                string2lcd
                0x0000000000001a7a                lcd_init
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .text          0x0000000000001bb0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000001bb0                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000001bb0       0xe0 lab5.o
                0x0000000000001bb0                main
 .text.libgcc.mul
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x0000000000001c90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc   0x0000000000001c90        0xc /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                0x0000000000001c90                __tablejump2__
                0x0000000000001c94                __tablejump__
 .text.libgcc.prologue
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001c9c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000001c9c       0x1e /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000001c9c                __umulhisi3
 .text.libgcc.div
                0x0000000000001cba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000001cba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000001cba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000001cba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000001cba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000001cba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.avr-libc
                0x0000000000001cba       0x16 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                0x0000000000001cba                __itoa_ncheck
 .text.avr-libc
                0x0000000000001cd0       0x34 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                0x0000000000001cd0                __utoa_ncheck
                0x0000000000001cd2                __utoa_common
 .text.avr-libc
                0x0000000000001d04       0x20 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000001d04                strrev
                0x0000000000001d24                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001d24        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x0000000000001d24                exit
                0x0000000000001d24                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001d24        0x4 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001d28                _etext = .

.data           0x0000000000800100       0x36 load address 0x0000000000001d28
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x3 lab5.o
                0x0000000000800100                volume
                0x0000000000800101                pressed_button
                0x0000000000800102                alarm_change
 .data          0x0000000000800103        0x0 twi_master.o
 .data          0x0000000000800103        0x0 uart_functions.o
 .data          0x0000000000800103        0x0 lm73_functions.o
 .data          0x0000000000800103        0x0 lcd_functions.o
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800103       0x10 lab5.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800113       0x22 lab5.o
 *(.gnu.linkonce.d*)
                0x0000000000800136                . = ALIGN (0x2)
 *fill*         0x0000000000800135        0x1 
                0x0000000000800136                _edata = .
                0x0000000000800136                PROVIDE (__data_end, .)

.bss            0x0000000000800136       0xb6
                0x0000000000800136                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800136        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800136       0x2f lab5.o
                0x0000000000800136                temp_mode
                0x0000000000800137                blink
                0x0000000000800138                music_status
                0x0000000000800139                alarm_on
                0x000000000080013a                snooze_flag
                0x000000000080013b                snooze_second
                0x000000000080013c                snooze_init_second
                0x000000000080013d                volume_change
                0x000000000080013f                snooze_offset
                0x0000000000800140                am_pm
                0x0000000000800141                show_temp
                0x0000000000800142                show_time
                0x0000000000800144                alarm_time
                0x0000000000800146                time
                0x0000000000800148                temp_is_up
                0x0000000000800149                bar_graph_flag
                0x000000000080014a                reset_temp
                0x000000000080014b                update_LCD
                0x000000000080014c                get_temp
                0x000000000080014d                encode_flag
 .bss           0x0000000000800165        0x1 twi_master.o
 .bss           0x0000000000800166        0x0 uart_functions.o
 .bss           0x0000000000800166        0x0 lm73_functions.o
 .bss           0x0000000000800166        0x0 lcd_functions.o
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .bss           0x0000000000800166        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800166       0x1d lab5.o
                0x0000000000800166                show_ampm
                0x0000000000800167                notes
                0x0000000000800168                dec_to_7seg
                0x0000000000800174                song
                0x0000000000800175                max_beat
                0x0000000000800177                beat
                0x0000000000800179                brightness_level
                0x000000000080017a                ampm_time
                0x000000000080017c                str
                0x000000000080017e                segment_data
 COMMON         0x0000000000800183        0x5 twi_master.o
                0x0000000000800183                twi_state
                0x0000000000800184                twi_buf
                0x0000000000800186                twi_bus_addr
                0x0000000000800187                twi_msg_size
 COMMON         0x0000000000800188       0x50 uart_functions.o
                0x0000000000800188                uart_tx_buf
                0x00000000008001b0                uart_rx_buf
 COMMON         0x00000000008001d8        0x4 lm73_functions.o
                0x00000000008001d8                lm73_wr_buf
                0x00000000008001da                lm73_rd_buf
 COMMON         0x00000000008001dc       0x10 lcd_functions.o
                0x00000000008001dc                lcd_str
                0x00000000008001ec                PROVIDE (__bss_end, .)
                0x0000000000001d28                __data_load_start = LOADADDR (.data)
                0x0000000000001d5e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001ec        0x0
                0x00000000008001ec                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001ec                PROVIDE (__noinit_end, .)
                0x00000000008001ec                _end = .
                0x00000000008001ec                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x4cf8
 *(.stab)
 .stab          0x0000000000000000     0x3108 lab5.o
 .stab          0x0000000000003108      0x660 twi_master.o
                                        0x87c (size before relaxing)
 .stab          0x0000000000003768      0x5d0 uart_functions.o
                                        0x7ec (size before relaxing)
 .stab          0x0000000000003d38      0x45c lm73_functions.o
                                        0x624 (size before relaxing)
 .stab          0x0000000000004194      0xb64 lcd_functions.o
                                        0xd5c (size before relaxing)

.stabstr        0x0000000000000000     0x193f
 *(.stabstr)
 .stabstr       0x0000000000000000     0x193f lab5.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lab5.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 twi_master.o
 .comment       0x0000000000000000       0x12 uart_functions.o
 .comment       0x0000000000000000       0x12 lm73_functions.o
 .comment       0x0000000000000000       0x12 lcd_functions.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab5.elf elf32-avr)
LOAD linker stubs
