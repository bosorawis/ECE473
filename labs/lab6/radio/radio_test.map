Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                              twi_master.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                              radio_test.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                              radio_test.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_byte_atmega128.o)
                              si4734.o (__eerd_byte_m128)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_word_atmega128.o)
                              si4734.o (__eerd_word_m128)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_byte_atmega128.o)
                              si4734.o (__eewr_byte_m128)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_word_atmega128.o)
                              si4734.o (__eewr_word_m128)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_block_atmega128.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_word_atmega128.o) (__eerd_blraw_m128)

Allocating common symbols
Common symbol       size              file

eeprom_volume       0x1               radio_test.o
eeprom_fm_freq      0x2               radio_test.o
uart_tx_buf         0x28              radio_test.o
twi_state           0x1               twi_master.o
twi_buf             0x2               twi_master.o
si4734_wr_buf       0x9               radio_test.o
si4734_tune_status_buf
                    0x8               radio_test.o
eeprom_am_freq      0x2               radio_test.o
current_volume      0x1               radio_test.o
si4734_revision_buf
                    0x10              radio_test.o
twi_bus_addr        0x1               twi_master.o
twi_msg_size        0x1               twi_master.o
current_am_freq     0x2               radio_test.o
STC_interrupt       0x1               radio_test.o
current_sw_freq     0x2               radio_test.o
uart_rx_buf         0x28              radio_test.o
rssi                0x1               radio_test.o
eeprom_sw_freq      0x2               radio_test.o
si4734_rd_buf       0xf               radio_test.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
LOAD radio_test.o
LOAD uart_functions.o
LOAD twi_master.o
LOAD si4734.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x848
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c       0xa2 twi_master.o
                0x000000000000012e                . = ALIGN (0x2)
                0x000000000000012e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000012e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000012e                __trampolines_end = .
 *(.progmem*)
                0x000000000000012e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000012e                __ctors_start = .
 *(.ctors)
                0x000000000000012e                __ctors_end = .
                0x000000000000012e                __dtors_start = .
 *(.dtors)
                0x000000000000012e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000012e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x000000000000012e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000012e        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000013a       0x1a /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                0x000000000000013a                __do_copy_data
 .init4         0x0000000000000154       0x10 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000154                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000164        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000000000016c        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x000000000000016c                __vector_22
                0x000000000000016c                __vector_28
                0x000000000000016c                __vector_1
                0x000000000000016c                __vector_32
                0x000000000000016c                __vector_34
                0x000000000000016c                __vector_24
                0x000000000000016c                __vector_12
                0x000000000000016c                __bad_interrupt
                0x000000000000016c                __vector_6
                0x000000000000016c                __vector_31
                0x000000000000016c                __vector_3
                0x000000000000016c                __vector_23
                0x000000000000016c                __vector_30
                0x000000000000016c                __vector_25
                0x000000000000016c                __vector_11
                0x000000000000016c                __vector_13
                0x000000000000016c                __vector_17
                0x000000000000016c                __vector_19
                0x000000000000016c                __vector_7
                0x000000000000016c                __vector_27
                0x000000000000016c                __vector_5
                0x000000000000016c                __vector_4
                0x000000000000016c                __vector_9
                0x000000000000016c                __vector_2
                0x000000000000016c                __vector_21
                0x000000000000016c                __vector_15
                0x000000000000016c                __vector_29
                0x000000000000016c                __vector_26
                0x000000000000016c                __vector_14
                0x000000000000016c                __vector_10
                0x000000000000016c                __vector_16
                0x000000000000016c                __vector_18
                0x000000000000016c                __vector_20
 .text          0x0000000000000170       0xdc radio_test.o
                0x0000000000000170                __vector_8
                0x000000000000018e                radio_init
                0x000000000000019a                radio_reset
                0x00000000000001b4                radio_powerUp
                0x00000000000001c0                radio_tune_freq
                0x00000000000001cc                radio_get_strengh
                0x00000000000001e2                redefine_rssi
 .text          0x000000000000024c       0x80 uart_functions.o
                0x000000000000024c                uart_putc
                0x0000000000000258                uart_puts
                0x0000000000000274                uart_puts_p
                0x000000000000029a                uart_init
                0x00000000000002b4                uart_getc
 .text          0x00000000000002cc      0x17a twi_master.o
                0x00000000000002cc                __vector_33
                0x00000000000003e8                twi_busy
                0x00000000000003f0                twi_start_wr
                0x0000000000000412                twi_start_rd
                0x0000000000000434                init_twi
 .text          0x0000000000000446      0x37a si4734.o
                0x0000000000000446                get_int_status
                0x0000000000000480                fm_tune_freq
                0x00000000000004b8                am_tune_freq
                0x00000000000004f4                sw_tune_freq
                0x0000000000000532                radio_pwr_dwn
                0x00000000000005a2                fm_rsq_status
                0x00000000000005de                fm_tune_status
                0x000000000000061a                am_tune_status
                0x000000000000064c                am_rsq_status
                0x000000000000067e                set_property
                0x00000000000006b2                fm_pwr_up
                0x0000000000000704                am_pwr_up
                0x0000000000000756                sw_pwr_up
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_byte_atmega128.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_word_atmega128.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_byte_atmega128.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_word_atmega128.o)
 .text          0x00000000000007c0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_block_atmega128.o)
                0x00000000000007c0                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000007c0       0x18 radio_test.o
                0x00000000000007c0                main
 .text.libgcc.mul
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000000007d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc   0x00000000000007d8        0xc /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                0x00000000000007d8                __tablejump2__
                0x00000000000007dc                __tablejump__
 .text.libgcc.prologue
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000007e4        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000007e4       0x10 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_byte_atmega128.o)
                0x00000000000007e4                __eerd_byte_m128
 .text.avr-libc
                0x00000000000007f4        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_word_atmega128.o)
                0x00000000000007f4                __eerd_word_m128
 .text.avr-libc
                0x0000000000000800       0x1a /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_byte_atmega128.o)
                0x0000000000000800                __eewr_byte_m128
                0x0000000000000802                __eewr_r18_m128
 .text.avr-libc
                0x000000000000081a        0xa /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_word_atmega128.o)
                0x000000000000081a                __eewr_word_m128
 .text.avr-libc
                0x0000000000000824       0x20 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_block_atmega128.o)
                0x0000000000000824                __eerd_block_m128
                0x0000000000000828                __eerd_blraw_m128
                0x0000000000000844                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000844        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x0000000000000844                exit
                0x0000000000000844                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000844        0x4 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000848                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000000848
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x2 radio_test.o
                0x0000000000800100                current_fm_freq
 .data          0x0000000000800102        0x0 uart_functions.o
 .data          0x0000000000800102        0x0 twi_master.o
 .data          0x0000000000800102        0x0 si4734.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_byte_atmega128.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_word_atmega128.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_byte_atmega128.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_word_atmega128.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_block_atmega128.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x96
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800102        0x2 radio_test.o
                0x0000000000800102                current_radio_band
 .bss           0x0000000000800104        0x0 uart_functions.o
 .bss           0x0000000000800104        0x1 twi_master.o
 .bss           0x0000000000800105        0x0 si4734.o
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_byte_atmega128.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_word_atmega128.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_byte_atmega128.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eewr_word_atmega128.o)
 .bss           0x0000000000800105        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(eerd_block_atmega128.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800105       0x8e radio_test.o
                0x0000000000800105                eeprom_volume
                0x0000000000800106                eeprom_fm_freq
                0x0000000000800108                uart_tx_buf
                0x0000000000800130                si4734_wr_buf
                0x0000000000800139                si4734_tune_status_buf
                0x0000000000800141                eeprom_am_freq
                0x0000000000800143                current_volume
                0x0000000000800144                si4734_revision_buf
                0x0000000000800154                current_am_freq
                0x0000000000800156                STC_interrupt
                0x0000000000800157                current_sw_freq
                0x0000000000800159                uart_rx_buf
                0x0000000000800181                rssi
                0x0000000000800182                eeprom_sw_freq
                0x0000000000800184                si4734_rd_buf
 COMMON         0x0000000000800193        0x5 twi_master.o
                0x0000000000800193                twi_state
                0x0000000000800194                twi_buf
                0x0000000000800196                twi_bus_addr
                0x0000000000800197                twi_msg_size
                0x0000000000800198                PROVIDE (__bss_end, .)
                0x0000000000000848                __data_load_start = LOADADDR (.data)
                0x000000000000084a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800198        0x0
                0x0000000000800198                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800198                PROVIDE (__noinit_end, .)
                0x0000000000800198                _end = .
                0x0000000000800198                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2250
 *(.stab)
 .stab          0x0000000000000000      0x9fc radio_test.o
 .stab          0x00000000000009fc      0x5dc uart_functions.o
                                        0x7d4 (size before relaxing)
 .stab          0x0000000000000fd8      0x660 twi_master.o
                                        0x87c (size before relaxing)
 .stab          0x0000000000001638      0xc18 si4734.o
                                        0xe34 (size before relaxing)

.stabstr        0x0000000000000000     0x1343
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1343 radio_test.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 radio_test.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 uart_functions.o
 .comment       0x0000000000000000       0x12 twi_master.o
 .comment       0x0000000000000000       0x12 si4734.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(radio_test.elf elf32-avr)
LOAD linker stubs
