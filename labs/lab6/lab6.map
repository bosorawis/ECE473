Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                              lab6.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                              lab6.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                              lab6.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                              lab6.o (__umulhisi3)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                              lab6.o (__itoa_ncheck)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

eeprom_volume       0x1               lab6.o
show_ampm           0x1               lab6.o
eeprom_fm_freq      0x2               lab6.o
uart_tx_buf         0x28              uart_functions.o
twi_state           0x1               twi_master.o
notes               0x1               lab6.o
dec_to_7seg         0xc               lab6.o
twi_buf             0x2               twi_master.o
song                0x1               lab6.o
si4734_wr_buf       0x9               si4734.o
lm73_wr_buf         0x2               lm73_functions.o
si4734_tune_status_buf
                    0x8               si4734.o
max_beat            0x2               lab6.o
current_volume      0x1               lab6.o
si4734_revision_buf
                    0x10              si4734.o
twi_bus_addr        0x1               twi_master.o
beat                0x2               lab6.o
lcd_str             0x10              lcd_functions.o
twi_msg_size        0x1               twi_master.o
current_am_freq     0x2               radio.o
brightness_level    0x1               lab6.o
current_fm_freq     0x2               lab6.o
STC_interrupt       0x1               lab6.o
current_sw_freq     0x2               radio.o
lm73_rd_buf         0x2               lm73_functions.o
uart_rx_buf         0x28              uart_functions.o
rssi                0x1               radio.o
ampm_time           0x2               lab6.o
str                 0x2               lab6.o
si4734_rd_buf       0xf               si4734.o
segment_data        0x5               lab6.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
LOAD lab6.o
LOAD twi_master.o
LOAD uart_functions.o
LOAD lm73_functions.o
LOAD lcd_functions.o
LOAD si4734.o
LOAD radio.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x2146
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c      0x12a lab6.o
 .progmem.gcc_sw_table
                0x00000000000001b6       0xa2 twi_master.o
                0x0000000000000258                . = ALIGN (0x2)
                0x0000000000000258                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000258        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000258                __trampolines_end = .
 *(.progmem*)
                0x0000000000000258                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000258                __ctors_start = .
 *(.ctors)
                0x0000000000000258                __ctors_end = .
                0x0000000000000258                __dtors_start = .
 *(.dtors)
                0x0000000000000258                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000258        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000258                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000258        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000264       0x1a /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                0x0000000000000264                __do_copy_data
 .init4         0x000000000000027e       0x10 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                0x000000000000027e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000028e        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x0000000000000296        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000296                __vector_22
                0x0000000000000296                __vector_28
                0x0000000000000296                __vector_1
                0x0000000000000296                __vector_32
                0x0000000000000296                __vector_34
                0x0000000000000296                __vector_24
                0x0000000000000296                __bad_interrupt
                0x0000000000000296                __vector_6
                0x0000000000000296                __vector_31
                0x0000000000000296                __vector_3
                0x0000000000000296                __vector_23
                0x0000000000000296                __vector_30
                0x0000000000000296                __vector_25
                0x0000000000000296                __vector_11
                0x0000000000000296                __vector_13
                0x0000000000000296                __vector_17
                0x0000000000000296                __vector_19
                0x0000000000000296                __vector_7
                0x0000000000000296                __vector_27
                0x0000000000000296                __vector_5
                0x0000000000000296                __vector_4
                0x0000000000000296                __vector_9
                0x0000000000000296                __vector_2
                0x0000000000000296                __vector_15
                0x0000000000000296                __vector_29
                0x0000000000000296                __vector_26
                0x0000000000000296                __vector_14
                0x0000000000000296                __vector_18
                0x0000000000000296                __vector_20
 .text          0x000000000000029a     0x155a lab6.o
                0x000000000000029a                play_rest
                0x00000000000002b0                play_note
                0x00000000000008ca                song0
                0x0000000000000a92                play_song
                0x0000000000000a9a                music_off
                0x0000000000000aa8                music_on
                0x0000000000000ac2                music_init
                0x0000000000000b04                chk_buttons
                0x0000000000000b44                int2seg
                0x0000000000000b98                segsum
                0x0000000000000cee                button_routine
                0x0000000000000e5a                __vector_16
                0x0000000000000f62                __vector_12
                0x0000000000000fe4                __vector_8
                0x000000000000101c                __vector_21
                0x0000000000001058                update_time
                0x0000000000001144                SPI_init
                0x000000000000114a                SPI_Transmit
                0x0000000000001152                SPI_Receive
                0x0000000000001168                bar_graph
                0x00000000000011a2                display_update
                0x0000000000001282                __vector_10
                0x00000000000012fc                right_inc
                0x000000000000134a                right_dec
                0x0000000000001384                decode_spi_right_knob
                0x0000000000001410                left_inc
                0x0000000000001480                left_dec
                0x00000000000014f4                decode_spi_left_knob
                0x000000000000157c                check_knobs
                0x00000000000015a0                get_remote_temp
                0x00000000000015cc                generate_temp_str
                0x00000000000016ca                show_temperature
                0x000000000000173c                LCD_Display
                0x0000000000001770                timer_init
                0x000000000000178a                ADC_init
                0x00000000000017a8                volume_control_init
                0x00000000000017c4                initialize_string
                0x00000000000017de                encoder_init
 .text          0x00000000000017f4      0x17a twi_master.o
                0x00000000000017f4                __vector_33
                0x0000000000001910                twi_busy
                0x0000000000001918                twi_start_wr
                0x000000000000193a                twi_start_rd
                0x000000000000195c                init_twi
 .text          0x000000000000196e       0x80 uart_functions.o
                0x000000000000196e                uart_putc
                0x000000000000197a                uart_puts
                0x0000000000001996                uart_puts_p
                0x00000000000019bc                uart_init
                0x00000000000019d6                uart_getc
 .text          0x00000000000019ee       0x9e lm73_functions.o
                0x00000000000019ee                lm73_temp_convert
                0x0000000000001a1a                lm73_init
                0x0000000000001a2a                get_local_temp
 .text          0x0000000000001a8c      0x2b8 lcd_functions.o
                0x0000000000001a8c                strobe_lcd
                0x0000000000001a9e                clear_display
                0x0000000000001ace                cursor_home
                0x0000000000001af2                home_line2
                0x0000000000001b16                fill_spaces
                0x0000000000001b52                char2lcd
                0x0000000000001b82                cursor_off
                0x0000000000001bb2                string2lcd
                0x0000000000001c0e                lcd_init
 .text          0x0000000000001d44      0x180 si4734.o
                0x0000000000001d44                get_int_status
                0x0000000000001d7e                fm_tune_freq
                0x0000000000001dbe                radio_pwr_dwn
                0x0000000000001de2                fm_rsq_status
                0x0000000000001e1e                fm_tune_status
                0x0000000000001e5a                set_property
                0x0000000000001e8e                fm_pwr_up
 .text          0x0000000000001ec4       0xcc radio.o
                0x0000000000001ec4                radio_init
                0x0000000000001ed0                radio_reset
                0x0000000000001eea                radio_powerUp
                0x0000000000001ef6                radio_tune_freq
                0x0000000000001f02                radio_get_strengh
                0x0000000000001f18                redefine_rssi
                0x0000000000001f82                radio_interrupt_init
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .text          0x0000000000001f90        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000001f90                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000001f90      0x11e lab6.o
                0x0000000000001f90                main
 .text.libgcc.mul
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000000020ae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc   0x00000000000020ae        0xc /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                0x00000000000020ae                __tablejump2__
                0x00000000000020b2                __tablejump__
 .text.libgcc.prologue
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000020ba        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000020ba       0x1e /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x00000000000020ba                __umulhisi3
 .text.libgcc.div
                0x00000000000020d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000000020d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000000020d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000000020d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000000020d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x00000000000020d8        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.avr-libc
                0x00000000000020d8       0x16 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                0x00000000000020d8                __itoa_ncheck
 .text.avr-libc
                0x00000000000020ee       0x34 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                0x00000000000020ee                __utoa_ncheck
                0x00000000000020f0                __utoa_common
 .text.avr-libc
                0x0000000000002122       0x20 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000002122                strrev
                0x0000000000002142                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000002142        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x0000000000002142                exit
                0x0000000000002142                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000002142        0x4 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000002146                _etext = .

.data           0x0000000000800100       0x36 load address 0x0000000000002146
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x3 lab6.o
                0x0000000000800100                volume
                0x0000000000800101                pressed_button
                0x0000000000800102                alarm_change
 .data          0x0000000000800103        0x0 twi_master.o
 .data          0x0000000000800103        0x0 uart_functions.o
 .data          0x0000000000800103        0x0 lm73_functions.o
 .data          0x0000000000800103        0x0 lcd_functions.o
 .data          0x0000000000800103        0x0 si4734.o
 .data          0x0000000000800103        0x0 radio.o
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800103       0x10 lab6.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800113       0x22 lab6.o
 *(.gnu.linkonce.d*)
                0x0000000000800136                . = ALIGN (0x2)
 *fill*         0x0000000000800135        0x1 
                0x0000000000800136                _edata = .
                0x0000000000800136                PROVIDE (__data_end, .)

.bss            0x0000000000800136       0xf6
                0x0000000000800136                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800136        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800136       0x33 lab6.o
                0x0000000000800136                current_radio_band
                0x0000000000800138                temp_mode
                0x0000000000800139                blink
                0x000000000080013a                music_status
                0x000000000080013b                alarm_on
                0x000000000080013c                snooze_flag
                0x000000000080013d                snooze_second
                0x000000000080013e                snooze_init_second
                0x000000000080013f                volume_change
                0x0000000000800141                snooze_offset
                0x0000000000800142                am_pm
                0x0000000000800143                show_temp
                0x0000000000800144                show_time
                0x0000000000800146                alarm_time
                0x0000000000800148                time
                0x000000000080014a                radio
                0x000000000080014b                temp_is_up
                0x000000000080014c                bar_graph_flag
                0x000000000080014d                reset_temp
                0x000000000080014e                update_LCD
                0x000000000080014f                get_temp
                0x0000000000800150                encode_flag
 .bss           0x0000000000800169        0x1 twi_master.o
 .bss           0x000000000080016a        0x0 uart_functions.o
 .bss           0x000000000080016a        0x0 lm73_functions.o
 .bss           0x000000000080016a        0x0 lcd_functions.o
 .bss           0x000000000080016a        0x0 si4734.o
 .bss           0x000000000080016a        0x0 radio.o
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080016a       0x24 lab6.o
                0x000000000080016a                eeprom_volume
                0x000000000080016b                show_ampm
                0x000000000080016c                eeprom_fm_freq
                0x000000000080016e                notes
                0x000000000080016f                dec_to_7seg
                0x000000000080017b                song
                0x000000000080017c                max_beat
                0x000000000080017e                current_volume
                0x000000000080017f                beat
                0x0000000000800181                brightness_level
                0x0000000000800182                current_fm_freq
                0x0000000000800184                STC_interrupt
                0x0000000000800185                ampm_time
                0x0000000000800187                str
                0x0000000000800189                segment_data
 COMMON         0x000000000080018e        0x5 twi_master.o
                0x000000000080018e                twi_state
                0x000000000080018f                twi_buf
                0x0000000000800191                twi_bus_addr
                0x0000000000800192                twi_msg_size
 COMMON         0x0000000000800193       0x50 uart_functions.o
                0x0000000000800193                uart_tx_buf
                0x00000000008001bb                uart_rx_buf
 COMMON         0x00000000008001e3        0x4 lm73_functions.o
                0x00000000008001e3                lm73_wr_buf
                0x00000000008001e5                lm73_rd_buf
 COMMON         0x00000000008001e7       0x10 lcd_functions.o
                0x00000000008001e7                lcd_str
 COMMON         0x00000000008001f7       0x30 si4734.o
                0x00000000008001f7                si4734_wr_buf
                0x0000000000800200                si4734_tune_status_buf
                0x0000000000800208                si4734_revision_buf
                0x0000000000800218                si4734_rd_buf
 COMMON         0x0000000000800227        0x5 radio.o
                0x0000000000800227                current_am_freq
                0x0000000000800229                current_sw_freq
                0x000000000080022b                rssi
                0x000000000080022c                PROVIDE (__bss_end, .)
                0x0000000000002146                __data_load_start = LOADADDR (.data)
                0x000000000000217c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080022c        0x0
                0x000000000080022c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080022c                PROVIDE (__noinit_end, .)
                0x000000000080022c                _end = .
                0x000000000080022c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x5f70
 *(.stab)
 .stab          0x0000000000000000     0x3468 lab6.o
 .stab          0x0000000000003468      0x660 twi_master.o
                                        0x87c (size before relaxing)
 .stab          0x0000000000003ac8      0x5d0 uart_functions.o
                                        0x7ec (size before relaxing)
 .stab          0x0000000000004098      0x498 lm73_functions.o
                                        0x660 (size before relaxing)
 .stab          0x0000000000004530      0xb64 lcd_functions.o
                                        0xd5c (size before relaxing)
 .stab          0x0000000000005094      0x7ec si4734.o
                                        0xa08 (size before relaxing)
 .stab          0x0000000000005880      0x6f0 radio.o
                                        0x918 (size before relaxing)

.stabstr        0x0000000000000000     0x1e22
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1e22 lab6.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lab6.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 twi_master.o
 .comment       0x0000000000000000       0x12 uart_functions.o
 .comment       0x0000000000000000       0x12 lm73_functions.o
 .comment       0x0000000000000000       0x12 lcd_functions.o
 .comment       0x0000000000000000       0x12 si4734.o
 .comment       0x0000000000000000       0x12 radio.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab6.elf elf32-avr)
LOAD linker stubs
