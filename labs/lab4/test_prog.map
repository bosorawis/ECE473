Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                              test_prog.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                              test_prog.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                              test_prog.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                              test_prog.o (__umulhisi3)

Allocating common symbols
Common symbol       size              file

show_ampm           0x1               test_prog.o
notes               0x1               test_prog.o
dec_to_7seg         0xc               test_prog.o
song                0x1               test_prog.o
max_beat            0x2               test_prog.o
beat                0x2               test_prog.o
lcd_str             0x10              LCDDriver.o
brightness_level    0x1               test_prog.o
ampm_time           0x2               test_prog.o
str                 0x2               test_prog.o
segment_data        0x5               test_prog.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
LOAD test_prog.o
LOAD LCDDriver.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1c80
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c      0x12c test_prog.o
                0x00000000000001b8                . = ALIGN (0x2)
                0x00000000000001b8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000001b8        0x0 linker stubs
 *(.trampolines*)
                0x00000000000001b8                __trampolines_end = .
 *(.progmem*)
                0x00000000000001b8                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000001b8                __ctors_start = .
 *(.ctors)
                0x00000000000001b8                __ctors_end = .
                0x00000000000001b8                __dtors_start = .
 *(.dtors)
                0x00000000000001b8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000001b8        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x00000000000001b8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000001b8        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000001c4       0x1a /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                0x00000000000001c4                __do_copy_data
 .init4         0x00000000000001de       0x10 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                0x00000000000001de                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000001ee        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x00000000000001f6        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x00000000000001f6                __vector_22
                0x00000000000001f6                __vector_28
                0x00000000000001f6                __vector_1
                0x00000000000001f6                __vector_32
                0x00000000000001f6                __vector_34
                0x00000000000001f6                __vector_24
                0x00000000000001f6                __bad_interrupt
                0x00000000000001f6                __vector_6
                0x00000000000001f6                __vector_31
                0x00000000000001f6                __vector_3
                0x00000000000001f6                __vector_23
                0x00000000000001f6                __vector_30
                0x00000000000001f6                __vector_25
                0x00000000000001f6                __vector_11
                0x00000000000001f6                __vector_13
                0x00000000000001f6                __vector_17
                0x00000000000001f6                __vector_19
                0x00000000000001f6                __vector_7
                0x00000000000001f6                __vector_27
                0x00000000000001f6                __vector_5
                0x00000000000001f6                __vector_33
                0x00000000000001f6                __vector_4
                0x00000000000001f6                __vector_9
                0x00000000000001f6                __vector_2
                0x00000000000001f6                __vector_15
                0x00000000000001f6                __vector_29
                0x00000000000001f6                __vector_8
                0x00000000000001f6                __vector_26
                0x00000000000001f6                __vector_14
                0x00000000000001f6                __vector_18
                0x00000000000001f6                __vector_20
 .text          0x00000000000001fa     0x123e test_prog.o
                0x00000000000001fa                play_rest
                0x0000000000000210                play_note
                0x000000000000082a                song0
                0x00000000000009f2                play_song
                0x00000000000009fa                music_off
                0x0000000000000a08                music_on
                0x0000000000000a22                music_init
                0x0000000000000a64                chk_buttons
                0x0000000000000aa4                int2seg
                0x0000000000000af8                segsum
                0x0000000000000c4e                __vector_16
                0x0000000000000d44                __vector_12
                0x0000000000000dc6                __vector_21
                0x0000000000000e02                update_time
                0x0000000000000eee                SPI_init
                0x0000000000000ef4                SPI_Transmit
                0x0000000000000efc                SPI_Receive
                0x0000000000000f14                bar_graph
                0x0000000000000f4e                button_routine
                0x00000000000010aa                display_update
                0x0000000000001110                right_inc
                0x000000000000115e                right_dec
                0x0000000000001198                decode_spi_right_knob
                0x0000000000001224                left_inc
                0x0000000000001274                left_dec
                0x00000000000012c8                decode_spi_left_knob
                0x0000000000001350                check_knobs
                0x0000000000001374                __vector_10
                0x00000000000013e2                timer_init
                0x00000000000013fc                ADC_init
                0x000000000000141a                volume_control_init
 .text          0x0000000000001438      0x776 LCDDriver.o
                0x0000000000001438                strobe_lcd
                0x000000000000144a                LCD_Clr
                0x0000000000001486                LCD_MovCursorLn1
                0x00000000000014b6                LCD_MovCursorLn2
                0x00000000000014e6                LCD_CursorBlinkOn
                0x0000000000001516                LCD_CursorBlinkOff
                0x0000000000001546                LCD_MovCursor
                0x0000000000001588                LCD_FillSpaces
                0x00000000000015c4                LCD_PutDec8
                0x0000000000001692                LCD_PutDec16
                0x0000000000001822                LCD_PutChar
                0x0000000000001852                LCD_PutStr
                0x00000000000018ac                LCD_SPIInit
                0x00000000000018c6                LCD_Init
 .text          0x0000000000001bae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text          0x0000000000001bae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text          0x0000000000001bae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000001bae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000001bae        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000001bae                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000001bae       0xa4 test_prog.o
                0x0000000000001bae                main
 .text.libgcc.mul
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x0000000000001c52        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc   0x0000000000001c52        0xc /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                0x0000000000001c52                __tablejump2__
                0x0000000000001c56                __tablejump__
 .text.libgcc.prologue
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001c5e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000001c5e       0x1e /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000001c5e                __umulhisi3
 .text.libgcc.div
                0x0000000000001c7c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000001c7c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000001c7c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000001c7c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000001c7c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000001c7c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000001c7c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001c7c        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x0000000000001c7c                exit
                0x0000000000001c7c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001c7c        0x4 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001c80                _etext = .

.data           0x0000000000800100       0x2a load address 0x0000000000001c80
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x2 test_prog.o
                0x0000000000800100                pressed_button
                0x0000000000800101                alarm_change
 .data          0x0000000000800102        0x0 LCDDriver.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800102       0x10 test_prog.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800112       0x17 test_prog.o
 *(.gnu.linkonce.d*)
                0x000000000080012a                . = ALIGN (0x2)
 *fill*         0x0000000000800129        0x1 
                0x000000000080012a                _edata = .
                0x000000000080012a                PROVIDE (__data_end, .)

.bss            0x000000000080012a       0x50
                0x000000000080012a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080012a        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .bss           0x000000000080012a       0x23 test_prog.o
                0x000000000080012a                blink
                0x000000000080012b                volume
                0x000000000080012c                music_status
                0x000000000080012d                alarm_on
                0x000000000080012e                snooze_flag
                0x000000000080012f                snooze_second
                0x0000000000800130                snooze_init_second
                0x0000000000800131                volume_change
                0x0000000000800133                snooze_offset
                0x0000000000800134                am_pm
                0x0000000000800135                show_time
                0x0000000000800137                alarm_time
                0x0000000000800139                time
                0x000000000080013b                update_LCD
 .bss           0x000000000080014d        0x0 LCDDriver.o
 .bss           0x000000000080014d        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .bss           0x000000000080014d        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .bss           0x000000000080014d        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .bss           0x000000000080014d        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x000000000080014d        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080014d       0x1d test_prog.o
                0x000000000080014d                show_ampm
                0x000000000080014e                notes
                0x000000000080014f                dec_to_7seg
                0x000000000080015b                song
                0x000000000080015c                max_beat
                0x000000000080015e                beat
                0x0000000000800160                brightness_level
                0x0000000000800161                ampm_time
                0x0000000000800163                str
                0x0000000000800165                segment_data
 COMMON         0x000000000080016a       0x10 LCDDriver.o
                0x000000000080016a                lcd_str
                0x000000000080017a                PROVIDE (__bss_end, .)
                0x0000000000001c80                __data_load_start = LOADADDR (.data)
                0x0000000000001caa                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080017a        0x0
                0x000000000080017a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080017a                PROVIDE (__noinit_end, .)
                0x000000000080017a                _end = .
                0x000000000080017a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x4230
 *(.stab)
 .stab          0x0000000000000000     0x2bbc test_prog.o
 .stab          0x0000000000002bbc     0x1674 LCDDriver.o
                                       0x183c (size before relaxing)

.stabstr        0x0000000000000000     0x1571
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1571 test_prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 test_prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 LCDDriver.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(test_prog.elf elf32-avr)
LOAD linker stubs
