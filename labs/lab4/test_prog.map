Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                              test_prog.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                              test_prog.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                              test_prog.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                              test_prog.o (__umulhisi3)

Allocating common symbols
Common symbol       size              file

notes               0x1               test_prog.o
dec_to_7seg         0xc               test_prog.o
song                0x1               test_prog.o
max_beat            0x2               test_prog.o
beat                0x2               test_prog.o
brightness_level    0x1               test_prog.o
segment_data        0x5               test_prog.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
LOAD test_prog.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x210e
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c      0x302 test_prog.o
                0x000000000000038e                . = ALIGN (0x2)
                0x000000000000038e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000038e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000038e                __trampolines_end = .
 *(.progmem*)
                0x000000000000038e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000038e                __ctors_start = .
 *(.ctors)
                0x000000000000038e                __ctors_end = .
                0x000000000000038e                __dtors_start = .
 *(.dtors)
                0x000000000000038e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000038e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x000000000000038e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000038e        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000039a       0x1a /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
                0x000000000000039a                __do_copy_data
 .init4         0x00000000000003b4       0x10 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
                0x00000000000003b4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000003c4        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x00000000000003cc        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
                0x00000000000003cc                __vector_22
                0x00000000000003cc                __vector_28
                0x00000000000003cc                __vector_1
                0x00000000000003cc                __vector_32
                0x00000000000003cc                __vector_34
                0x00000000000003cc                __vector_24
                0x00000000000003cc                __bad_interrupt
                0x00000000000003cc                __vector_6
                0x00000000000003cc                __vector_31
                0x00000000000003cc                __vector_3
                0x00000000000003cc                __vector_23
                0x00000000000003cc                __vector_30
                0x00000000000003cc                __vector_25
                0x00000000000003cc                __vector_11
                0x00000000000003cc                __vector_13
                0x00000000000003cc                __vector_17
                0x00000000000003cc                __vector_19
                0x00000000000003cc                __vector_7
                0x00000000000003cc                __vector_27
                0x00000000000003cc                __vector_5
                0x00000000000003cc                __vector_33
                0x00000000000003cc                __vector_4
                0x00000000000003cc                __vector_9
                0x00000000000003cc                __vector_2
                0x00000000000003cc                __vector_15
                0x00000000000003cc                __vector_29
                0x00000000000003cc                __vector_8
                0x00000000000003cc                __vector_26
                0x00000000000003cc                __vector_14
                0x00000000000003cc                __vector_18
                0x00000000000003cc                __vector_20
 .text          0x00000000000003d0     0x1cce test_prog.o
                0x00000000000003d0                play_rest
                0x00000000000003e6                play_note
                0x0000000000000a00                song0
                0x0000000000000bc8                song1
                0x0000000000000d90                song2
                0x0000000000001708                song3
                0x00000000000017d4                play_song
                0x0000000000001802                music_off
                0x0000000000001810                music_on
                0x0000000000001828                music_init
                0x0000000000001868                __vector_12
                0x00000000000018e6                chk_buttons
                0x0000000000001926                int2seg
                0x000000000000197a                segsum
                0x0000000000001ac8                button_routine
                0x0000000000001b46                __vector_21
                0x0000000000001b82                update_time
                0x0000000000001c00                __vector_16
                0x0000000000001c8e                SPI_init
                0x0000000000001c94                SPI_Transmit
                0x0000000000001c9c                SPI_Receive
                0x0000000000001cb4                bar_graph
                0x0000000000001cfc                display_update
                0x0000000000001d60                set_brightness
                0x0000000000001d98                right_inc
                0x0000000000001de6                right_dec
                0x0000000000001e20                decode_spi_right_knob
                0x0000000000001e96                left_inc
                0x0000000000001ecc                left_dec
                0x0000000000001f06                decode_spi_left_knob
                0x0000000000001f8e                check_knobs
                0x0000000000001f9c                __vector_10
                0x0000000000002020                cleanup_alarm
                0x000000000000203a                cleanup
                0x0000000000002060                timer_init
                0x0000000000002080                ADC_init
 .text          0x000000000000209e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text          0x000000000000209e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text          0x000000000000209e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text          0x000000000000209e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x000000000000209e        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x000000000000209e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000209e       0x42 test_prog.o
                0x000000000000209e                main
 .text.libgcc.mul
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000000020e0        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc   0x00000000000020e0        0xc /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
                0x00000000000020e0                __tablejump2__
                0x00000000000020e4                __tablejump__
 .text.libgcc.prologue
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000020ec        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000020ec       0x1e /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x00000000000020ec                __umulhisi3
 .text.libgcc.div
                0x000000000000210a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x000000000000210a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x000000000000210a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x000000000000210a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x000000000000210a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x000000000000210a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
                0x000000000000210a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000210a        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
                0x000000000000210a                exit
                0x000000000000210a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000210a        0x4 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000210e                _etext = .

.data           0x0000000000800100       0x10 load address 0x000000000000210e
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .data          0x0000000000800100        0x0 test_prog.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800100       0x10 test_prog.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800110                . = ALIGN (0x2)
                0x0000000000800110                _edata = .
                0x0000000000800110                PROVIDE (__data_end, .)

.bss            0x0000000000800110       0x2f
                0x0000000000800110                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr51/crtm128.o
 .bss           0x0000000000800110       0x17 test_prog.o
                0x0000000000800110                blink
                0x0000000000800111                write
                0x0000000000800112                alarm_time
                0x0000000000800114                time
 .bss           0x0000000000800127        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800127        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_tablejump.o)
 .bss           0x0000000000800127        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800127        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800127        0x0 /usr/lib/gcc/avr/4.8.1/avr51/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800127       0x18 test_prog.o
                0x0000000000800127                notes
                0x0000000000800128                dec_to_7seg
                0x0000000000800134                song
                0x0000000000800135                max_beat
                0x0000000000800137                beat
                0x0000000000800139                brightness_level
                0x000000000080013a                segment_data
                0x000000000080013f                PROVIDE (__bss_end, .)
                0x000000000000210e                __data_load_start = LOADADDR (.data)
                0x000000000000211e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080013f        0x0
                0x000000000080013f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080013f                PROVIDE (__noinit_end, .)
                0x000000000080013f                _end = .
                0x000000000080013f                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x3834
 *(.stab)
 .stab          0x0000000000000000     0x3834 test_prog.o

.stabstr        0x0000000000000000     0x11ee
 *(.stabstr)
 .stabstr       0x0000000000000000     0x11ee test_prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 test_prog.o
                                         0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(test_prog.elf elf32-avr)
LOAD linker stubs
